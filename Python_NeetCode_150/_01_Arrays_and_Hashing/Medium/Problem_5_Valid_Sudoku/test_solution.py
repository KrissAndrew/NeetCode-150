import unittest
from .solutions import *

class TestValidSudoku(unittest.TestCase):

        test_cases = [
            ([["1","2",".",".","3",".",".",".","."],
              ["4",".",".","5",".",".",".",".","."],
              [".","9","8",".",".",".",".",".","3"],
              ["5",".",".",".","6",".",".",".","4"],
              [".",".",".","8",".","3",".",".","5"],
              ["7",".",".",".","2",".",".",".","6"],
              [".",".",".",".",".",".","2",".","."],
              [".",".",".","4","1","9",".",".","8"],
              [".",".",".",".","8",".",".","7","9"]], True),
            ([["1","2","1",".","3",".",".",".","."], # Invalid row
              ["4",".",".","5",".",".",".",".","."],
              [".","9",".",".",".",".",".",".","3"],
              ["5",".",".",".","6",".",".",".","4"],
              [".",".",".","8",".","3",".",".","5"],
              ["7",".",".",".","2",".",".",".","6"],
              [".",".",".",".",".",".","2",".","."],
              [".",".",".","4","1","9",".",".","8"],
              [".",".",".",".","8",".",".","7","9"]], False),
            ([["1","2",".",".","3",".",".",".","."], # Invalid column 
              ["4",".",".","5",".",".",".",".","."],
              [".","9",".",".",".",".",".",".","3"],
              ["5",".",".",".","6",".",".",".","4"],
              ["1",".",".","8",".","3",".",".","5"],
              ["7",".",".",".","2",".",".",".","6"],
              [".",".",".",".",".",".","2",".","."],
              [".",".",".","4","1","9",".",".","8"],
              [".",".",".",".","8",".",".","7","9"]], False),
            ([["1","2","1",".","3",".",".",".","."], # Invalid top left square
              ["4","1",".","5",".",".",".",".","."],
              [".","9","1",".",".",".",".",".","3"],
              ["5",".",".",".","6",".",".",".","4"],
              [".",".",".","8",".","3",".",".","5"],
              ["7",".",".",".","2",".",".",".","6"],
              [".",".",".",".",".",".","2",".","."],
              [".",".",".","4","1","9",".",".","8"],
              [".",".",".",".","8",".",".","7","9"]], False),
            ([[".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."],
              [".",".",".",".",".",".",".",".","."]], True),
        ]
    
        
        def test_valid_sudoku(self):
            print("\nRunning tests for 'Valid Sudoku'")
            for idx, (board, expected) in enumerate(self.test_cases, start=1):
                with self.subTest(test=idx):
                    result = valid_sudoku(board)
                    # Create a formatted string with each row on a new line for readability
                    board_str = "\n".join(" ".join(row) for row in board)
                    self.assertEqual(
                        result, expected,
                        f"Test case {idx} failed:\nBoard:\n{board_str}\nExpected: {expected} but got {result}"
                    )

if __name__ == '__main__':
    unittest.main()
